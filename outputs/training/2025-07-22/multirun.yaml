hydra:
  run:
    dir: ./outputs/training/${now:%Y-%m-%d}/${name}/${hydra.job.num}
  sweep:
    dir: ./outputs/training/${now:%Y-%m-%d}
    subdir: ${name}/seed_${seed}/${hydra.job.num}
  launcher:
    submitit_folder: ${hydra.sweep.dir}/.submitit/%j
    timeout_min: 2880
    cpus_per_task: null
    gpus_per_node: null
    tasks_per_node: 1
    mem_gb: null
    nodes: 1
    name: ${hydra.job.name}
    stderr_to_stdout: false
    _target_: hydra_plugins.hydra_submitit_launcher.submitit_launcher.SlurmLauncher
    partition: gpu_a100_il,gpu_h100_il,gpu_h100
    qos: null
    comment: null
    constraint: null
    exclude: null
    gres: gpu:1
    cpus_per_gpu: null
    gpus_per_task: null
    mem_per_gpu: '8000'
    mem_per_cpu: null
    account: null
    signal_delay_s: 120
    max_num_timeout: 0
    additional_parameters:
      cpus-per-task: 12
    array_parallelism: 256
    setup: null
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params:
      seed: 0,1,2
      agent_config.globals.device: cuda
      agent_config.agent_config.actor_updater.action_penalization: 'False'
      agent_config.agent_config.actor_updater.epsilon: 1.0,0.5
      agent_config.agent_config.model.actor.head.num_diffusion_steps: 50,100
      agent_config.globals.sigma_max: '80'
      agent_config.globals.sigma_min: '0.002'
      agent_config.agent_config.actor_updater.sigma_mean: '-1.2'
      agent_config.agent_config.actor_updater.sigma_std: '1.2'
      agent_config.agent_config.actor_updater.num_samples: '40'
      agent_config.agent_config.actor_updater.density_type: loglogistic
      agent_config.agent_config.replay_updater.return_steps: '5'
      agent_config.agent_config.model.actor.head.sampler_type: ddim ,heun
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: MULTIRUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra: []
    task: []
  job:
    name: run_tonic
    chdir: null
    override_dirname: ''
    id: ???
    num: ???
    config_name: exp19
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.1'
    cwd: /pfs/data6/home/ka/ka_anthropomatik/ka_ln2554/mpo_diff/tonic
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /home/ka/ka_anthropomatik/ka_ln2554/mpo_diff/configs
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: ???
    choices:
      platform: bwuni_all_gpus
      wandb_config: diffusion_wandb
      trainer_config: trainer_config
      agent_config: dmpo_karras51
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: submitit_slurm
      hydra/output: default
  verbose: false
header: import tonic.torch
agent: tonic.torch.agents.DMPO()
environment: tonic.environments.ControlSuite("dog-run")
test_environment: null
trainer: tonic.Trainer()
before_training: ''
after_training: ''
parallel: 1
sequential: 1
seed: 0
name: DMPO-X
environment_name: null
checkpoint: last
path: ''
agent_config:
  globals:
    sigma_max: 80
    sigma_min: 0.002
    device: cpu
  agent_config:
    model:
      name: DiffusionActorCriticWithTargets
      actor:
        name: DiffusionActor
        encoder:
          name: IdentityEncoder
        torso:
          name: IdentityTorso
        head:
          name: DiffusionPolicyHead
          device: ${agent_config.globals.device}
          num_diffusion_steps: 16
          hidden_dim: 512
          embed_dim: 80
          embed_type: sinusoidal
          n_hidden: 4
          sigma_data: 1
          sampler_type: ddim
          model_type: mlp
          sigma_max: ${agent_config.globals.sigma_max}
          sigma_min: ${agent_config.globals.sigma_min}
          rho: 7
          s_churn: 0
          s_tmin: 0
          s_tmax: float('inf')
          s_noise: 1
          eta: 1.0
          noise_type: karras
      critic:
        name: Critic
        encoder:
          name: ObservationActionEncoder
        torso:
          name: MLP
          hidden_layers:
          - 2048
          - 2048
          activation: ReLU
        head:
          name: DistributionalValueHead
          v_min: -200
          v_max: 200
          num_atoms: 101
        device: ${agent_config.globals.device}
      observation_normalizer:
        name: MeanStd
      return_normalizer: null
      actor_squash: false
      action_scale: 1
      target_coeff: 0.005
    replay_updater:
      name: Buffer
      size: 1000000
      batch_size: 256
      discount_factor: 0.99
      steps_before_batches: 10000
      return_steps: 5
      steps_between_batches: 50
      sigma_data: null
    actor_updater:
      name: DiffusionMaximumAPosterioriPolicyOptimization
      num_samples: 20
      epsilon: 0.1
      epsilon_penalty: 0.001
      epsilon_mean: 0.001
      epsilon_std: 1.0e-06
      initial_log_temperature: 1.0
      initial_log_alpha_mean: 1.0
      initial_log_alpha_std: 10.0
      min_log_dual: -18.0
      per_dim_constraining: true
      action_penalization: false
      actor_gradient_clip: 0
      dual_gradient_clip: 0
      sigma_mean: 1.2
      sigma_std: -1.2
      sigma_max: ${agent_config.globals.sigma_max}
      sigma_min: ${agent_config.globals.sigma_min}
      rho: 7
      density_type: lognormal
      optimizer:
        name: Adam
        learning_rate: 0.0003
        dual_learning_rate: 0.02
    critic_updater:
      name: DistributionalDeterministicQLearning
      optimizer:
        name: Adam
        learning_rate: 0.0003
      gradient_clip: 0
trainer_config:
  trainer_config:
    steps: 1000100
    epoch_steps: 1000
    save_steps: 10000
    test_episodes: 4
    show_progress: true
    replace_checkpoint: false
    test_freq: 10
wandb_config:
  wandb_config:
    name: Seed_${seed}_epsilon_${agent_config.agent_config.actor_updater.epsilon}_sampler_${agent_config.agent_config.model.actor.head.sampler_type}_diffsteps__${agent_config.agent_config.model.actor.head.num_diffusion_steps}
    project: Debug Karras Dog Run
    entity: null
    mode: online
    group: _epsilon_${agent_config.agent_config.actor_updater.epsilon}_sampler_${agent_config.agent_config.model.actor.head.sampler_type}_diffsteps__${agent_config.agent_config.model.actor.head.num_diffusion_steps}
    job_type: training
    tags:
    - diffusion-policy
    - dmpo
    notes: KarrasC51 Perf Test DMC Dog-Run, c_noise * 1
